name: Continuous Integration

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]

    steps:
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '23'

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy
          override: true

      - name: List GitHub caches
        run: gh cache list
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.8

      - name: Set env for sccache
        shell: bash
        run: |
          echo "SCCACHE_GHA_ENABLED=true" >> $GITHUB_ENV
          echo "RUSTC_WRAPPER=sccache" >> $GITHUB_ENV

      - name: Cache Cargo Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
            ${{ env.SCCACHE_PATH }}
          key: cargo-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            cargo-${{ runner.os }}-
            cargo-

      - name: Install cargo-llvm-cov
        run: cargo install cargo-llvm-cov

      - name: Generate code coverage
        run: cargo llvm-cov --workspace --lcov --output-path lcov.info

      - name: Upload coverage to Codecov
        if: success()
        uses: codecov/codecov-action@v5
        with:
          files: lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true

#  test-on-s390x:
#    name: build (linux big-endian)
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4
#
#      - name: Set up Rust
#        uses: actions-rs/toolchain@v1
#        with:
#          toolchain: stable
#          override: true
#
#      - name: Cache Cargo Dependencies
#        uses: actions/cache@v4
#        with:
#          path: |
#            ~/.cargo/registry
#            ~/.cargo/git
#            target/s390x-unknown-linux-gnu
#          key: cargo-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
#          restore-keys: |
#            cargo-${{ runner.os }}-
#            cargo-
#
#      - name: Install cross
#        shell: bash
#        run: cargo install cross
#
#      - name: Create temporary data directory for cross-compilation
#        shell: bash
#        run: |
#          mkdir -p "${{ github.workspace }}/.tmp-xdg-data"
#          echo "XDG_DATA_HOME=/project/.tmp-xdg-data" >> $GITHUB_ENV
#
#      - name: Run tests on s390x (Big Endian)
#        shell: bash
#        run: |
#          set -e
#          cross test --workspace --target s390x-unknown-linux-gnu --verbose -- --test-threads=8
